{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Sensors } from \"./src/Sensors\";\nimport { Switchers } from \"./src/Switchers\";\nimport { Start } from \"./src/Start\";\nimport * as LocalAuthentication from 'expo-local-authentication';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\nimport { persistCache } from 'apollo3-cache-persist';\nimport { AppLoading } from 'expo';\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_DATA } from \"./query/sensor\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar cache = new InMemoryCache();\nvar client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: cache,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-and-network'\n    }\n  }\n});\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(ApolloProvider, {\n    client: client,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: 'Control app'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen,\n          options: {\n            title: 'Control app'\n          }\n        })]\n      })\n    })\n  });\n}\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var goToData = function goToData() {\n    return navigation.navigate('Profile');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Start, {\n      onPress: goToData\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n};\nvar ProfileScreen = function ProfileScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useQuery = useQuery(GET_DATA, {\n      variables: {\n        ID: 1\n      }\n    }),\n    dataA = _useQuery.dataA,\n    loadingA = _useQuery.loadingA;\n  var _useQuery2 = useQuery(GET_DATA, {\n      variables: {\n        ID: 2\n      }\n    }),\n    dataT = _useQuery2.dataT,\n    loadingT = _useQuery2.loadingT;\n  var _useQuery3 = useQuery(GET_DATA, {\n      variables: {\n        ID: 3\n      }\n    }),\n    dataH = _useQuery3.dataH,\n    loadingH = _useQuery3.loadingH;\n  if (loadingA || loadingT || loadingH) {\n    return _jsx(\"h1\", {\n      children: \"Loading...\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        height: '15%',\n        justifyContent: 'center'\n      },\n      children: _jsxs(Text, {\n        style: styles.baseText,\n        children: [\"ESP32 HOUSE \", dataA, \" CONTROL\"]\n      })\n    }), _jsx(View, {\n      style: styles.bottom\n    }), _jsx(Sensors, {\n      valueA: dataA,\n      valueT: dataT,\n      valueH: dataH\n    }), _jsx(View, {\n      style: styles.bottom\n    }), _jsx(Switchers, {}), _jsx(Button, {\n      color: \"#a66f6f\",\n      title: \"Go to Home\",\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#F5F0F0',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  baseText: {\n    fontSize: 25,\n    fontWeight: 'bold'\n  },\n  bottom: {\n    borderStartWidth: 300\n  },\n  button: {\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#a66f6f\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","Sensors","Switchers","Start","LocalAuthentication","createNativeStackNavigator","StatusBar","ApolloProvider","ApolloClient","InMemoryCache","persistCache","AppLoading","useMutation","useQuery","GET_DATA","cache","client","uri","defaultOptions","watchQuery","fetchPolicy","Stack","App","HomeScreen","title","ProfileScreen","navigation","goToData","navigate","styles","container","variables","ID","dataA","loadingA","dataT","loadingT","dataH","loadingH","height","justifyContent","baseText","bottom","StyleSheet","create","flex","flexDirection","backgroundColor","alignItems","fontSize","fontWeight","borderStartWidth","button","borderRadius"],"sources":["D:/WEB/First app/first-app/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {NavigationContainer} from '@react-navigation/native';\nimport { Button, StyleSheet, Text, View } from 'react-native'\nimport { Sensors } from './src/Sensors'\nimport { Switchers } from './src/Switchers'\nimport { Start } from './src/Start'\nimport * as LocalAuthentication from 'expo-local-authentication'\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport {ApolloProvider, ApolloClient, InMemoryCache} from '@apollo/client'\n//import AsyncStorage from '@react-native-community/async-storage'\nimport { persistCache } from 'apollo3-cache-persist'\nimport { AppLoading } from 'expo'\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {GET_DATA} from \"./query/sensor\";\n\nconst cache = new InMemoryCache()\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache,\n  defaultOptions: { watchQuery: { fetchPolicy: 'cache-and-network' } },\n})\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// import { fab } from '@fortawesome/free-brands-svg-icons'\n// import {\n//   faCloud, faWater, faThermometerHalf, faFire, faLightbulb, faDoorOpen\n// } from \"@fortawesome/free-solid-svg-icons\";\n//library.add(fab, faCloud, faWater, faThermometerHalf, faFire, faLightbulb, faDoorOpen)\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  \n    return(\n      <ApolloProvider client={client}>\n      <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen \n          name=\"Home\" \n          component={HomeScreen}\n          options={{title: 'Control app'}}\n        />\n        <Stack.Screen \n          name=\"Profile\" \n          component={ProfileScreen} \n          options={{title: 'Control app'}}\n        />\n      </Stack.Navigator>\n    </NavigationContainer> \n    </ApolloProvider>   \n    ); \n}\n\nconst HomeScreen = ({navigation}) => {\n  const goToData = () =>\n    navigation.navigate('Profile');\n\n  return (\n    <View style={styles.container}>   \n    <Start onPress={goToData}/> \n    <StatusBar style=\"auto\"/>  \n    </View>\n  );\n};\n\nconst ProfileScreen = ({navigation}) => {\n  const {dataA, loadingA} = useQuery(GET_DATA, {\n    variables: {\n        ID: 1\n    }\n  })\n  const {dataT, loadingT} = useQuery(GET_DATA, {\n    variables: {\n        ID: 2\n    }\n  })\n  const {dataH, loadingH} = useQuery(GET_DATA, {\n    variables: {\n        ID: 3\n    }\n})\n\nif (loadingA || loadingT || loadingH) {\n  return <h1>Loading...</h1>\n}\n\n  return (\n    <View style={styles.container}> \n      <View style={{height: '15%', justifyContent: 'center',}}><Text style={styles.baseText}>ESP32 HOUSE {dataA} CONTROL</Text></View> \n      <View style={styles.bottom} />\n      <Sensors valueA={dataA} valueT={dataT} valueH={dataH}/>\n      <View style={styles.bottom} />\n      <Switchers/>    \n      <Button\n        color='#a66f6f'\n        title=\"Go to Home\"\n        onPress={() => navigation.navigate('Home')}\n      />   \n      {/* <Button title=\"Go back\" onPress={() => navigation.goBack()} /> */}\n      {/* <Text>This is page with {route.params.data}</Text>   */}   \n    </View>);\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#F5F0F0',\n    alignItems: 'center',\n    justifyContent: 'space-around', \n     \n  },\n  baseText: {\n    fontSize: 25,\n    fontWeight: 'bold',\n  },\n  bottom: {\n    borderStartWidth: 300,\n  },\n  button: {\n    //width: \"10%\",\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#a66f6f\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}