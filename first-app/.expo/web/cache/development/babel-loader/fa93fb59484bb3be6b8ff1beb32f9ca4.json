{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { BIO } from \"./BIO\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { StatusBar } from 'expo-status-bar';\nimport * as LocalAuthentication from 'expo-local-authentication';\nimport { clickProps } from \"react-native-web/dist/cjs/modules/forwardedProps\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Start = function Start(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    touch = _useState4[0],\n    setTouch = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    elementVisible = _useState6[0],\n    setElementVisible = _useState6[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: \"center\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 30\n        },\n        children: \"WELCOME HOME\"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 20\n        },\n        children: \"PLEASE, AUTORIZE\"\n      })]\n    }), _jsx(BIO, {}), elementVisible ? _jsxs(View, {\n      style: styles.inlineBlock,\n      children: [_jsx(TextInput, {\n        style: {\n          height: \"13%\"\n        },\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Button, {\n          onPress: function onPress() {\n            return setElementVisible(!elementVisible);\n          },\n          style: styles.loginBtn,\n          title: \"eye\",\n          color: \"#a66f6f\"\n        })\n      })]\n    }) : _jsx(TouchableOpacity, {\n      children: _jsx(Button, {\n        onPress: function onPress() {\n          return setElementVisible(!elementVisible);\n        },\n        style: styles.loginBtn,\n        title: \"Login with password\",\n        color: \"#a66f6f\"\n      })\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Button, {\n        onPress: props.onPress,\n        style: styles.loginBtn,\n        title: \"GO TO DATA\",\n        color: \"#a66f6f\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#F5F0F0',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  inputView: {\n    backgroundColor: \"#FFC0CB\",\n    borderRadius: 5,\n    alignItems: \"center\"\n  },\n  TextInput: {},\n  forgot_button: {},\n  loginBtn: {\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#a66f6f\"\n  },\n  inlineBlock: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["React","useState","BIO","StatusBar","LocalAuthentication","clickProps","Start","props","password","setPassword","touch","setTouch","elementVisible","setElementVisible","styles","container","justifyContent","alignItems","fontSize","inlineBlock","height","loginBtn","onPress","StyleSheet","create","flex","flexDirection","backgroundColor","inputView","borderRadius","TextInput","forgot_button"],"sources":["D:/React Native/First app/first-app/src/Start.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BIO } from './BIO'\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport * as LocalAuthentication from 'expo-local-authentication'\r\nimport { clickProps } from \"react-native-web/dist/cjs/modules/forwardedProps\";\r\n\r\nexport const Start = (props) => {\r\n    const [password, setPassword] = useState(\"\");  \r\n    const [touch, setTouch] = useState(false);\r\n    const [elementVisible, setElementVisible] = useState(false); \r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={{justifyContent: 'center', alignItems: \"center\"}}>\r\n          <Text style={{fontSize: 30}}>WELCOME HOME</Text>\r\n          <Text style={{fontSize: 20}}>PLEASE, AUTORIZE</Text>\r\n        </View> \r\n        <BIO/> \r\n        {/* <StatusBar style=\"auto\" /> */}\r\n        \r\n        {/* <TouchableOpacity>\r\n          <Text style={styles.forgot_button}>Forgot Password?</Text> \r\n        </TouchableOpacity>  */}\r\n        \r\n        \r\n        {elementVisible ? (\r\n          <View style={styles.inlineBlock}>\r\n            <TextInput\r\n              style={{height: \"13%\"}}\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"#003f5c\"\r\n              secureTextEntry={true}\r\n              onChangeText={(password) => setPassword(password)}\r\n            /> \r\n            <TouchableOpacity >\r\n            <Button \r\n              onPress={() => setElementVisible(!elementVisible)}\r\n              style={styles.loginBtn} \r\n              title=\"eye\" \r\n              color='#a66f6f' />\r\n          </TouchableOpacity>\r\n          </View>) : (<TouchableOpacity >\r\n          <Button \r\n            onPress={() => setElementVisible(!elementVisible)} \r\n            style={styles.loginBtn} \r\n            title=\"Login with password\" \r\n            color='#a66f6f'/>\r\n        </TouchableOpacity>) }\r\n         \r\n\r\n        <TouchableOpacity >\r\n          <Button \r\n            onPress={props.onPress} \r\n            style={styles.loginBtn} \r\n            title=\"GO TO DATA\" \r\n            color='#a66f6f' />\r\n        </TouchableOpacity> \r\n      </View> \r\n    );\r\n  }\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      flexDirection: 'column',\r\n      backgroundColor: '#F5F0F0',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-around', \r\n    },\r\n    inputView: {\r\n      backgroundColor: \"#FFC0CB\",\r\n      borderRadius: 5,\r\n      //width: \"70%\",\r\n      //height: \"5%\",\r\n      //marginBottom: 20,\r\n      alignItems: \"center\",\r\n    },\r\n    TextInput: {\r\n      //height: \"20%\",\r\n      //flex: 1,\r\n      // padding: 10,\r\n      // marginLeft: 20,\r\n    },\r\n    forgot_button: {\r\n      //height: \"5%\",\r\n      //marginBottom: 30,\r\n    },\r\n    loginBtn: {\r\n      //width: \"10%\",\r\n      borderRadius: 5,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      //marginTop: 40,\r\n      backgroundColor: \"#a66f6f\",\r\n    },\r\n    inlineBlock: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      //height: '25%',\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}