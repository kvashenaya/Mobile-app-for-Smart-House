{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RnStatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport * as LocalAuthentication from 'expo-local-authentication';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var BIO = function BIO() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isBiometricSupported = _useState2[0],\n    setIsBiometricSupported = _useState2[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var compatible = yield LocalAuthentication.hasHardwareAsync();\n      setIsBiometricSupported(compatible);\n    })();\n  });\n  var fallBackToDefaultAuth = function fallBackToDefaultAuth() {\n    console.log('fall back to password authentication');\n  };\n  var alertComponent = function alertComponent(title, mess, btnTxt, btnFunc) {\n    return Alert.alert(title, mess, [{\n      text: btnTxt,\n      onPress: btnFunc\n    }]);\n  };\n  var handleBiometricAuth = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var isBiometricAvailable = yield LocalAuthentication.hasHardwareAsync();\n      if (!isBiometricAvailable) return alertComponent('Please enter your password', 'Biometric Authentication not supported', 'OK', function () {\n        return fallBackToDefaultAuth();\n      });\n      var supportedBiometrics;\n      if (isBiometricAvailable) supportedBiometrics = yield LocalAuthentication.supportedAuthenticationTypesAsync();\n      var savedBiometrics = yield LocalAuthentication.isEnrolledAsync();\n      if (!savedBiometrics) return alertComponent('Biometric record not found', 'Please login with your password', 'OK', function () {\n        return fallBackToDefaultAuth();\n      });\n      var biometricAuth = yield LocalAuthentication.authenticateAsync({\n        promptMessage: 'Login with Biometrics',\n        cancelLabel: 'Cancel',\n        disableDeviceFallback: true\n      });\n      if (biometricAuth) console.log('success');\n      console.log({\n        isBiometricAvailable: isBiometricAvailable\n      });\n      console.log({\n        supportedBiometrics: supportedBiometrics\n      });\n      console.log({\n        savedBiometrics: savedBiometrics\n      });\n      console.log({\n        biometricAuth: biometricAuth\n      });\n    });\n    return function handleBiometricAuth() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        children: isBiometricSupported ? 'Your device is compatible with Biometrics' : 'Face or Fingerprint scanner is available on this device'\n      }), _jsx(TouchableHighlight, {\n        style: {\n          height: 60\n        },\n        children: _jsx(Button, {\n          title: \"Login with Biometrics\",\n          color: \"#a66f6f\",\n          onPress: handleBiometricAuth,\n          style: {\n            borderRadius: 5\n          }\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: '18.6%',\n    paddingTop: RnStatusBar.currentHeight,\n    paddingLeft: 20,\n    paddingRight: 20\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useEffect","LocalAuthentication","BIO","isBiometricSupported","setIsBiometricSupported","compatible","hasHardwareAsync","fallBackToDefaultAuth","console","log","alertComponent","title","mess","btnTxt","btnFunc","Alert","alert","text","onPress","handleBiometricAuth","isBiometricAvailable","supportedBiometrics","supportedAuthenticationTypesAsync","savedBiometrics","isEnrolledAsync","biometricAuth","authenticateAsync","promptMessage","cancelLabel","disableDeviceFallback","styles","container","height","borderRadius","StyleSheet","create","paddingTop","RnStatusBar","currentHeight","paddingLeft","paddingRight"],"sources":["D:/React Native/First app/first-app/src/BIO.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  Button,\r\n  TouchableHighlight,\r\n  Alert,\r\n  StatusBar as RnStatusBar,\r\n} from 'react-native';\r\nimport * as LocalAuthentication from 'expo-local-authentication';\r\n\r\nexport const BIO = () => {\r\n    const [isBiometricSupported, setIsBiometricSupported] = useState(false);\r\n\r\n    // Check if hardware supports biometrics\r\n    useEffect(() => {\r\n      (async () => {\r\n        const compatible = await LocalAuthentication.hasHardwareAsync();\r\n        setIsBiometricSupported(compatible);\r\n      })();\r\n    });\r\n  \r\n    const fallBackToDefaultAuth = () => {\r\n      console.log('fall back to password authentication');\r\n    };\r\n  \r\n    const alertComponent = (title, mess, btnTxt, btnFunc) => {\r\n      return Alert.alert(title, mess, [\r\n        {\r\n          text: btnTxt,\r\n          onPress: btnFunc,\r\n        },\r\n      ]);\r\n    };\r\n  \r\n    const handleBiometricAuth = async () => {\r\n      // Check if hardware supports biometrics\r\n      const isBiometricAvailable = await LocalAuthentication.hasHardwareAsync();\r\n  \r\n      // Fallback to default authentication method (password) if Fingerprint is not available\r\n      if (!isBiometricAvailable)\r\n        return alertComponent(\r\n          'Please enter your password',\r\n          'Biometric Authentication not supported',\r\n          'OK',\r\n          () => fallBackToDefaultAuth()\r\n        );\r\n  \r\n      // Check Biometrics types available (Fingerprint, Facial recognition, Iris recognition)\r\n      let supportedBiometrics;\r\n      if (isBiometricAvailable)\r\n        supportedBiometrics = await LocalAuthentication.supportedAuthenticationTypesAsync();\r\n  \r\n      // Check Biometrics are saved locally in user's device\r\n      const savedBiometrics = await LocalAuthentication.isEnrolledAsync();\r\n      if (!savedBiometrics)\r\n        return alertComponent(\r\n          'Biometric record not found',\r\n          'Please login with your password',\r\n          'OK',\r\n          () => fallBackToDefaultAuth()\r\n        );\r\n  \r\n      // Authenticate use with Biometrics (Fingerprint, Facial recognition, Iris recognition)\r\n  \r\n      const biometricAuth = await LocalAuthentication.authenticateAsync({\r\n        promptMessage: 'Login with Biometrics',\r\n        cancelLabel: 'Cancel',\r\n        disableDeviceFallback: true,\r\n      });\r\n      // Log the user in on success\r\n      if (biometricAuth) console.log('success');\r\n  \r\n      console.log({ isBiometricAvailable });\r\n      console.log({ supportedBiometrics });\r\n      console.log({ savedBiometrics });\r\n      console.log({ biometricAuth });\r\n    };\r\n\r\n    return (<SafeAreaView>\r\n        <View style={styles.container}>\r\n          <Text>\r\n            {isBiometricSupported\r\n              ? 'Your device is compatible with Biometrics'\r\n              : 'Face or Fingerprint scanner is available on this device'}\r\n          </Text>\r\n  \r\n          <TouchableHighlight\r\n            style={{\r\n              height: 60,\r\n            }}\r\n          >\r\n            <Button\r\n              title=\"Login with Biometrics\"\r\n              color=\"#a66f6f\"\r\n              onPress={handleBiometricAuth}\r\n              style={{borderRadius: 5}}\r\n            />\r\n          </TouchableHighlight>\r\n  \r\n          <StatusBar style=\"auto\" />\r\n        </View>\r\n      </SafeAreaView>);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      height: '18.6%',\r\n      paddingTop: RnStatusBar.currentHeight,\r\n      \r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n    },\r\n  });\r\n// LocalAuthenticationOptions = {\r\n//     promptMessage?: string; \r\n//     cancelLabel?: string;\r\n//     disableDeviceFallback?: boolean;\r\n//     fallbackLabel?: string;\r\n//   }"],"mappings":"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"},"metadata":{},"sourceType":"module"}