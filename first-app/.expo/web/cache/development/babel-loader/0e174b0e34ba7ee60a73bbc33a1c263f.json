{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { SecurityLevel } from \"./LocalAuthentication.types\";\nexport default {\n  get name() {\n    return 'ExpoLocalAuthentication';\n  },\n  hasHardwareAsync: function () {\n    var _hasHardwareAsync = _asyncToGenerator(function* () {\n      return false;\n    });\n    function hasHardwareAsync() {\n      return _hasHardwareAsync.apply(this, arguments);\n    }\n    return hasHardwareAsync;\n  }(),\n  isEnrolledAsync: function () {\n    var _isEnrolledAsync = _asyncToGenerator(function* () {\n      return false;\n    });\n    function isEnrolledAsync() {\n      return _isEnrolledAsync.apply(this, arguments);\n    }\n    return isEnrolledAsync;\n  }(),\n  getEnrolledLevelAsync: function () {\n    var _getEnrolledLevelAsync = _asyncToGenerator(function* () {\n      return SecurityLevel.NONE;\n    });\n    function getEnrolledLevelAsync() {\n      return _getEnrolledLevelAsync.apply(this, arguments);\n    }\n    return getEnrolledLevelAsync;\n  }(),\n  supportedAuthenticationTypesAsync: function () {\n    var _supportedAuthenticationTypesAsync = _asyncToGenerator(function* () {\n      return [];\n    });\n    function supportedAuthenticationTypesAsync() {\n      return _supportedAuthenticationTypesAsync.apply(this, arguments);\n    }\n    return supportedAuthenticationTypesAsync;\n  }()\n};","map":{"version":3,"sources":["../src/ExpoLocalAuthentication.web.ts"],"names":[],"mappings":";AAAA,SAA6B,aAAa;AAE1C,eAAe;EACb,IAAI,IAAI,GAAA;IACN,OAAO,yBAAyB;EAClC,CAAC;EACK,gBAAgB;IAAA,uDAAA;MACpB,OAAO,KAAK;IACd,CAAC;IAAA;MAAA;IAAA;IAAA;EAAA;EACK,eAAe;IAAA,sDAAA;MACnB,OAAO,KAAK;IACd,CAAC;IAAA;MAAA;IAAA;IAAA;EAAA;EACK,qBAAqB;IAAA,4DAAA;MACzB,OAAO,aAAa,CAAC,IAAI;IAC3B,CAAC;IAAA;MAAA;IAAA;IAAA;EAAA;EACK,iCAAiC;IAAA,wEAAA;MACrC,OAAO,EAAE;IACX,CAAC;IAAA;MAAA;IAAA;IAAA;EAAA;CACF","sourcesContent":["import { AuthenticationType, SecurityLevel } from './LocalAuthentication.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoLocalAuthentication';\n  },\n  async hasHardwareAsync(): Promise<boolean> {\n    return false;\n  },\n  async isEnrolledAsync(): Promise<boolean> {\n    return false;\n  },\n  async getEnrolledLevelAsync(): Promise<SecurityLevel> {\n    return SecurityLevel.NONE;\n  },\n  async supportedAuthenticationTypesAsync(): Promise<AuthenticationType[]> {\n    return [];\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}